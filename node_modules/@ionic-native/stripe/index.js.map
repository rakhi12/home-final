{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/stripe/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgJ5C,0BAAiB;;;;IAE3C;;;;OAIG;;;;;;IAEH,kCAAiB;;;;;cAAC,cAAsB,IAAmB,MAAM,CAAC,EAAE;IAEpE;;;;OAIG;;;;;;IAEH,gCAAe;;;;;cAAC,MAA6B,IAAiC,MAAM,CAAC,EAAE;IAEvF;;;;OAIG;;;;;;IAEH,uCAAsB;;;;;cAAC,MAA+B,IAAqB,MAAM,CAAC,EAAE;IAEpF;;;;OAIG;;;;;;IAEH,mCAAkB;;;;;cAAC,UAAkB,IAAkB,MAAM,CAAC,EAAE;IAEhE;;;;OAIG;;;;;;IAEH,4BAAW;;;;;cAAC,GAAW,IAAkB,MAAM,CAAC,EAAE;IAElD;;;;;OAKG;;;;;;;IAEH,mCAAkB;;;;;;cAAC,QAAgB,EAAE,OAAe,IAAkB,MAAM,CAAC,EAAE;IAE/E;;;;OAIG;;;;;;IAEH,4BAAW;;;;;cAAC,UAAkB,IAAqB,MAAM,CAAC,EAAE;;gBA1D7D,UAAU;;;;;QAQR,OAAO,EAAE;;;;mDAC0D;;QAOnE,OAAO,EAAE;;;;iDAC6E;;QAOtF,OAAO,EAAE;;;;wDAC0E;;QAOnF,OAAO,EAAE;;;;oDACsD;;QAO/D,OAAO,EAAE;;;;6CACwC;;QAQjD,OAAO,EAAE;;;;oDACqE;;QAO9E,OAAO,EAAE;;;;6CACkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAzDjD,MAAM;QARlB,MAAM,CAAC;YACN,UAAU,EAAE,QAAQ;YACpB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,wBAAwB;YACnC,IAAI,EAAE,oDAAoD;YAC1D,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC;SACzC,CAAC;OAEW,MAAM,EA2DlB;iBA5MD;EAiJ4B,iBAAiB;SAAhC,MAAM","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\nexport interface StripeCardTokenParams {\r\n  /**\r\n   * Card number\r\n   */\r\n  number: string;\r\n  /**\r\n   * Expiry month\r\n   */\r\n  expMonth: number;\r\n  /**\r\n   * Expiry year\r\n   */\r\n  expYear: number;\r\n  /**\r\n   * CVC / CVV\r\n   */\r\n  cvc?: string;\r\n  /**\r\n   * Cardholder name\r\n   */\r\n  name?: string;\r\n  /**\r\n   * Address line 1\r\n   */\r\n  address_line1?: string;\r\n  /**\r\n   * Address line 2\r\n   */\r\n  address_line2?: string;\r\n  /**\r\n   * City\r\n   */\r\n  address_city?: string;\r\n  /**\r\n   * State / Province\r\n   */\r\n  address_state?: string;\r\n  /**\r\n   * Country\r\n   */\r\n  address_country?: string;\r\n  /**\r\n   * Postal code / ZIP Code\r\n   */\r\n  postal_code?: string;\r\n  /**\r\n   * 3-letter ISO code for currency\r\n   */\r\n  currency?: string;\r\n}\r\n\r\nexport interface StripeBankAccountParams {\r\n  /**\r\n   * Routing number.\r\n   */\r\n  routing_number: string;\r\n  /**\r\n   * Account number.\r\n   */\r\n  account_number: string;\r\n  /**\r\n   * Currency code. Example: `USD`.\r\n   */\r\n  currency: string;\r\n  /**\r\n   * Country code. Example: `US`.\r\n   */\r\n  country: string;\r\n  /**\r\n   * Account holder name.\r\n   */\r\n  account_holder_name?: string;\r\n  /**\r\n   * Account holder type. This can be `individual` or `company`.\r\n   */\r\n  account_holder_type?: string;\r\n}\r\n\r\nexport interface StripeCardTokenRes {\r\n    /**\r\n     * Card Object.\r\n     */\r\n    card: {\r\n        brand: string,\r\n        exp_month: number,\r\n        exp_year: number,\r\n        funding: string,\r\n        last4: string\r\n    };\r\n    /**\r\n     * Token Request Date Time.\r\n     */\r\n    created: string;\r\n    /**\r\n     * Card Token.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Source Type (card or account).\r\n     */\r\n    type: string;\r\n}\r\n\r\n/**\r\n * @name Stripe\r\n * @description\r\n * A plugin that allows you to use Stripe's Native SDKs for Android and iOS.\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Stripe } from '@ionic-native/stripe';\r\n *\r\n * constructor(private stripe: Stripe) { }\r\n *\r\n * ...\r\n *\r\n * this.stripe.setPublishableKey('my_publishable_key');\r\n *\r\n * let card = {\r\n *  number: '4242424242424242',\r\n *  expMonth: 12,\r\n *  expYear: 2020,\r\n *  cvc: '220'\r\n * };\r\n *\r\n * this.stripe.createCardToken(card)\r\n *    .then(token => console.log(token.id))\r\n *    .catch(error => console.error(error));\r\n *\r\n * ```\r\n *\r\n * @interfaces\r\n * StripeCardTokenParams\r\n */\r\n@Plugin({\r\n  pluginName: 'Stripe',\r\n  plugin: 'cordova-plugin-stripe',\r\n  pluginRef: 'cordova.plugins.stripe',\r\n  repo: 'https://github.com/zyramedia/cordova-plugin-stripe',\r\n  platforms: ['Android', 'Browser', 'iOS']\r\n})\r\n@Injectable()\r\nexport class Stripe extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Set publishable key\r\n   * @param publishableKey {string} Publishable key\r\n   * @return {Promise<void>}\r\n   */\r\n  @Cordova()\r\n  setPublishableKey(publishableKey: string): Promise<void> { return; }\r\n\r\n  /**\r\n   * Create Credit Card Token\r\n   * @param params {StripeCardTokenParams} Credit card information\r\n   * @return {Promise<StripeCardTokenRes>} returns a promise that resolves with the token object, or rejects with an error\r\n   */\r\n  @Cordova()\r\n  createCardToken(params: StripeCardTokenParams): Promise<StripeCardTokenRes> { return; }\r\n\r\n  /**\r\n   * Create a bank account token\r\n   * @param params {StripeBankAccountParams} Bank account information\r\n   * @return {Promise<string>} returns a promise that resolves with the token, or rejects with an error\r\n   */\r\n  @Cordova()\r\n  createBankAccountToken(params: StripeBankAccountParams): Promise<string> { return; }\r\n\r\n  /**\r\n   * Validates a credit card number\r\n   * @param cardNumber {string} Credit card number\r\n   * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\r\n   */\r\n  @Cordova()\r\n  validateCardNumber(cardNumber: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Validates a CVC number\r\n   * @param cvc {string} CVC number\r\n   * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\r\n   */\r\n  @Cordova()\r\n  validateCVC(cvc: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Validates an expiry date\r\n   * @param expMonth {string} expiry month\r\n   * @param expYear {string} expiry year\r\n   * @return {Promise<any>} returns a promise that resolves if the date is valid, and rejects if it's invalid\r\n   */\r\n  @Cordova()\r\n  validateExpiryDate(expMonth: string, expYear: string): Promise<any> { return; }\r\n\r\n  /**\r\n   * Get a card type from card number\r\n   * @param cardNumber {string} Card number\r\n   * @return {Promise<string>} returns a promise that resolves with the credit card type\r\n   */\r\n  @Cordova()\r\n  getCardType(cardNumber: string): Promise<string> { return; }\r\n\r\n}\r\n"]}